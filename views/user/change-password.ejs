<%- include("../../views/partials/user/header") %>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQjvIj3N2cF5D5JoI6qdx2Ptt06HLZ+LTWTBO1CnJFM8jK5tX2NcPtT7T" crossorigin="anonymous">



<section class="vh-90   " style="padding: 50px 0;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h4 class="text-center">Change Password</h4>
                    </div>
                    <div class="card-body">
                        <form id="currentPasswordForm">
                            <div class="mb-3">
                                <label for="currentPassword" class="form-label">Current Password</label>
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                                <div class="invalid-feedback">
                                    Please enter your current password
                                </div>
                            </div>
                            <div class="text-center">
                                <button type="submit" class="btn btn-primary" id="verifyButton">Verify Password</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Password Change Modal -->
<!-- <div class="modal fade" id="passwordChangeModal" tabindex="-1" area-labelledby="passwordChangeModalLabel" aria-hidden="true"> -->
<div class="modal fade" id="passwordChangeModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="passwordChangeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Set New Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newPasswordForm">
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                        <div class="invalid-feedback" id="newPasswordError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                        <div class="invalid-feedback" id="confirmPasswordError"></div>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">Change Password</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-JE/XzK9Jt3Bo2WbE3Bxj6i/WdLaOJvH4Pe0CrvlJ8S/f9e/aBnp4UmEOV8SmjIHv" crossorigin="anonymous"></script>


<script>
 // Add a flag to track verification status
let isCurrentPasswordVerified = false;

document.getElementById('currentPasswordForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const currentPassword = document.getElementById('currentPassword').value;
    
    try {
        const response = await fetch('/verify-current-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ currentPassword })
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Set verification flag to true
            isCurrentPasswordVerified = true;
            
            // Clear any previous errors
            document.getElementById('newPasswordError').textContent = '';
            document.getElementById('confirmPasswordError').textContent = '';
            
            // Reset new password form
            document.getElementById('newPasswordForm').reset();
            
            // Show modal for new password
            const modal = new bootstrap.Modal(document.getElementById('passwordChangeModal'));
            modal.show();
        } else {
            isCurrentPasswordVerified = false;
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Current password is incorrect'
            });
        }
    } catch (error) {
        isCurrentPasswordVerified = false;
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.'
        });
    }
});

document.getElementById('newPasswordForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Check if current password was verified
    if (!isCurrentPasswordVerified) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please verify your current password first'
        });
        return;
    }
    
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    const newPasswordError = document.getElementById('newPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    
    // Reset error messages
    newPasswordError.textContent = '';
    confirmPasswordError.textContent = '';
    
    // Validation
    let hasError = false;
    
    if (newPassword.length < 6) {
        newPasswordError.textContent = 'Password must be at least 6 characters';
        hasError = true;
    }
    
    if (newPassword !== confirmPassword) {
        confirmPasswordError.textContent = 'Passwords do not match';
        hasError = true;
    }
    
    if (hasError) return;
    
    try {
        const response = await fetch('/update-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ newPassword })
        });
        
        const data = await response.json();
        
        // Get modal instance
        const modalElement = document.getElementById('passwordChangeModal');
        const modalInstance = bootstrap.Modal.getInstance(modalElement);
        
        if (data.success) {
            // Reset verification flag
            isCurrentPasswordVerified = false;
            
            // Close modal first
            if (modalInstance) {
                modalInstance.hide();
            }
            
            // Clear the forms
            document.getElementById('currentPasswordForm').reset();
            document.getElementById('newPasswordForm').reset();
            
            // Show success message
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Password changed successfully'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/userProfile';
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Failed to update password'
            });
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong. Please try again.'
        });
    }
});

// Add event listener for modal close
document.getElementById('passwordChangeModal').addEventListener('hidden.bs.modal', function () {
    // Reset verification flag when modal is closed
    isCurrentPasswordVerified = false;
    
    // Reset forms when modal is closed
    document.getElementById('newPasswordForm').reset();
    document.getElementById('newPasswordError').textContent = '';
    document.getElementById('confirmPasswordError').textContent = '';
});

// Prevent modal from closing when clicking outside
const passwordChangeModal = document.getElementById('passwordChangeModal');
passwordChangeModal.setAttribute('data-bs-backdrop', 'static');
passwordChangeModal.setAttribute('data-bs-keyboard', 'false');
</script>

<%- include("../../views/partials/user/footer") %>

