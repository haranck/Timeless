

<%- include("../../views/partials/admin/footer") %><%- include("../../views/partials/admin/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<style>
/* Wrapper Styles */
.content-wrapper {
    margin-left: 250px;
    padding: 20px;
}

.card {
    background: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    padding: 15px;
}

/* Form Styles */
.form-label {
    font-weight: 500;
    margin-bottom: 5px;
}

.form-control {
    border: 1px solid #ced4da;
    border-radius: 4px;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
}

.form-control:focus {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.btn-primary {
    background-color: #007bff;
    border: none;
    border-radius: 4px;
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    transition: background-color 0.2s ease-in-out;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
}

/* Table Styles */
.table {
    margin-top: 20px;
    border-collapse: collapse;
    width: 100%;
    background-color: #ffffff;
}

.table th {
    background-color: #f8f9fa;
    color: #212529;
    font-weight: 600;
    padding: 10px;
    text-align: left;
    border-bottom: 2px solid #dee2e6;
}

.table td {
    padding: 10px;
    vertical-align: middle;
    border-bottom: 1px solid #dee2e6;
}

.table-hover tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.text-end {
    text-align: right;
}

/* Toggle Switch Styles */
.form-check.form-switch {
    padding-left: 2.5em;
    margin: 0;
    display: flex;
    align-items: center;
}

.form-check-input {
    width: 3em;
    height: 1.5em;
    cursor: pointer;
    background-color: #dc3545;
    border-color: #dc3545;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='white'/%3e%3c/svg%3e");
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
}

.form-check-input:checked {
    background-color: #198754;
    border-color: #198754;
}

.form-check-input:focus {
    box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);
    border-color: #198754;
}

.form-check-input:not(:checked):focus {
    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    border-color: #dc3545;
}

/* Button Styles */
.btn-outline-primary {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    border-color: #007bff;
    color: #007bff;
    border-radius: 4px;
    transition: all 0.2s ease-in-out;
}

.btn-outline-primary:hover {
    background-color: #007bff;
    color: #ffffff;
    border-color: #0056b3;
}

.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.8rem;
}

/* Pagination Styles */
.pagination-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-top: 20px;
}

.pagination-container a {
    padding: 0.5rem 0.75rem;
    font-size: 0.9rem;
    border-radius: 4px;
    text-decoration: none;
    border: 1px solid #007bff;
    color: #007bff;
    transition: all 0.2s ease-in-out;
}

.pagination-container a.btn-primary {
    background-color: #007bff;
    color: #ffffff;
    border-color: #0056b3;
}

.pagination-container a:hover {
    background-color: #0056b3;
    color: #ffffff;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .content-wrapper {
        margin-left: 0;
    }

    .pagination-container {
        flex-wrap: wrap;
        gap: 0.25rem;
    }
}

/* Additional Styles */
.create-btn {
    background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    border: none;
    padding: 12px 24px;
    font-weight: 500;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
}

.create-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.2);
}

.create-btn i {
    transition: transform 0.3s ease;
}

.create-btn:hover i {
    transform: rotate(90deg);
}

.form-control {
    border: 1px solid #ced4da;
    border-radius: 6px;
    padding: 12px 16px;
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.15);
    transform: translateY(-1px);
}

.form-label {
    font-weight: 500;
    color: #344767;
    margin-bottom: 8px;
}

.status-label {
    font-size: 0.875rem;
    font-weight: 500;
}

.text-success {
    color: #198754 !important;
}

.text-danger {
    color: #dc3545 !important;
}

.edit-category {
    border: 1px solid #007bff;
    transition: all 0.3s ease;
}

.edit-category:hover {
    background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 123, 255, 0.15);
}

.table th {
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.875rem;
    letter-spacing: 0.5px;
}

.error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.5rem;
    display: none;
}

.error-message.show {
    display: block;
    animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}
</style>
<div class="content-wrapper">
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12"   style="margin-top: 70px; " >
                    <div class="content-header mb-5">
                        <h2 class="content-title">Category Management</h2>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <!-- Category Form -->
                                <div class="col-md-4">
                                    <form id="addCategoryForm" method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                                        <div class="mb-4">
                                            <label for="product_name" class="form-label">Category Name</label>
                                            <input type="text" name="name" placeholder="Enter category name" class="form-control" id="product_name" required/>
                                            <div id="name-error" class="error-message"></div>
                                        </div>
                                        <div class="mb-4">
                                            <label class="form-label">Description</label>
                                            <textarea placeholder="Enter category description" name="description" class="form-control" id="descriptionId" required></textarea>
                                            <div id="description-error" class="error-message"></div>
                                        </div>
                                        <div class="d-grid">
                                            <button class="btn btn-primary create-btn" type="submit">
                                                <i class="fas fa-plus-circle me-2"></i>Create Category
                                            </button>
                                        </div>
                                    </form>
                                </div>

                                <!-- Category Table -->
                                <div class="col-md-8">
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Name</th>
                                                    <th>Description</th>
                                                    <th>List/Unlist</th>
                                                    <th class="text-end">Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% cat.forEach((category) => { %>
                                                <tr>
                                                    <td><%= category.name %></td>
                                                    <td><%= category.description %></td>
                                                    <td>
                                                        <div class="form-check form-switch d-flex align-items-center justify-content-start">
                                                            <input type="checkbox" class="form-check-input toggle-status" 
                                                                   data-id="<%= category._id %>"
                                                                   <%= category.isListed ? 'checked' : '' %>
                                                            />
                                                            <span class="status-label ms-2 <%= category.isListed ? 'text-success' : 'text-danger' %>">
                                                                <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                                            </span>
                                                        </div>
                                                    </td>
                                                    <td class="text-end">
                                                       <a href="/admin/editCategory/?id=<%= category._id %>"> <button class="btn btn-sm btn-outline-primary edit-category" title="Edit Category">
                                                        <i class="fas fa-edit me-1"></i> Edit
                                                    </button></a>
                                                    </td>
                                                </tr>
                                                <% }) %>
                                            </tbody>
                                        </table>
                                    </div>

                                    <!-- Pagination -->
                                    <div class="pagination-container mt-4">
                                        <% if (currentPage > 1) { %>
                                            <a href="?page=<%= currentPage - 1 %>" class="btn btn-sm btn-outline-primary">&laquo; Previous</a>
                                        <% } %>
                                        
                                        <% for (let i = 1; i <= totalPages; i++) { %>
                                            <a href="?page=<%= i %>" class="btn btn-sm <%= currentPage == i ? 'btn-primary' : 'btn-outline-primary' %>">
                                                <%= i %>
                                            </a>
                                        <% } %>
                                        
                                        <% if (currentPage < totalPages) { %>
                                            <a href="?page=<%= currentPage + 1 %>" class="btn btn-sm btn-outline-primary">Next &raquo;</a>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function handleFormSubmit(event) {
    event.preventDefault();
    clearErrorMessages();

    const nameInput = document.getElementById('product_name');
    const descriptionInput = document.getElementById('descriptionId');
    let isValid = true;

    if (!nameInput.value.trim()) {
        showError('name-error', 'Category name is required');
        isValid = false;
    } else if (nameInput.value.length < 3) {
        showError('name-error', 'Category name must be at least 3 characters');
        isValid = false;
    }

    if (!descriptionInput.value.trim()) {
        showError('description-error', 'Description is required');
        isValid = false;
    } else if (descriptionInput.value.length < 10) {
        showError('description-error', 'Description must be at least 10 characters');
        isValid = false;
    }

    if (isValid) {
        const formData = new FormData();
        formData.append('name', nameInput.value.trim());
        formData.append('description', descriptionInput.value.trim());
         const data = {
            name : nameInput.value.trim(),
            description : descriptionInput.value.trim()
         }
        fetch('/admin/addCategory', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Category added successfully',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    window.location.reload(); // Force page reload
                });
            } else {
                throw new Error(data.message || 'Failed to add category');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message || 'Failed to add category',
            });
        });
    }

    return false;
}

function showError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.textContent = message;
    errorElement.classList.add('show');
}

function clearErrorMessages() {
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach(element => {
        element.textContent = '';
        element.classList.remove('show');
    });
}

// Toggle Status Handler
document.querySelectorAll('.toggle-status').forEach(toggle => {
    toggle.addEventListener('change', function() {
        const categoryId = this.dataset.id;
        const isListed = this.checked;
        const statusLabel = this.parentElement.querySelector('.status-label');

        Swal.fire({
            title: 'Are you sure?',
            text: `Do you want to ${isListed ? 'list' : 'unlist'} this category?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update it!'
        }).then((result) => {
            if (result.isConfirmed) {


                // Update status
                fetch(`/admin/toggleCategory/${categoryId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ isListed })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        statusLabel.textContent = isListed ? 'Listed' : 'Unlisted';
                        statusLabel.className = `status-label ms-2 ${isListed ? 'text-success' : 'text-danger'}`;
                        
                        Swal.fire({
                            icon: 'success',
                            title: 'Updated!',
                            text: `Category has been ${isListed ? 'listed' : 'unlisted'}`,
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        throw new Error(data.message || 'Update failed');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    this.checked = !isListed; // Revert toggle
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Failed to update category status',
                    });
                });
            } else {
                this.checked = !isListed; // Revert toggle if cancelled
            }
        });
    });
});
</script>

<%- include("../../views/partials/admin/footer") %>