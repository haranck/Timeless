<%- include("../../views/partials/admin/header") %>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

    <style>
        :root {
            --sidebar-width: 250px;
            --header-height: 60px;
        }

        /* Layout */
        .admin-header {
            height: var(--header-height);
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            z-index: 1030;
            background: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .admin-sidebar {
            width: var(--sidebar-width);
            position: fixed;
            top: var(--header-height);
            bottom: 0;
            left: 0;
            z-index: 1000;
            background: #000000;
            padding-top: 1rem;
            transition: all 0.3s;
        }

        .main-content {
            margin-left: var(--sidebar-width);
            margin-top: var(--header-height);
            padding: 2rem;
            min-height: calc(100vh - var(--header-height));
            background: #f8f9fa;
        }

        /* Sidebar styles */
        .sidebar-link {
            color: #ecf0f1;
            text-decoration: none;
            padding: 0.8rem 1rem;
            display: flex;
            align-items: center;
            transition: all 0.3s;
        }

        .sidebar-link:hover,
        .sidebar-link.active {
            background: #34495e;
            color: #fff;
        }

        .sidebar-link i {
            width: 24px;
            margin-right: 8px;
        }

        /* Grid styles */
        .orders-grid {
            display: grid;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .order-header {
            display: grid;
            grid-template-columns: 0.5fr 1fr 1.5fr 1fr 1fr 1fr 1.2fr;
            gap: 1rem;
            padding: 1.2rem 1.5rem;
            background: #000000;
            color: white;
            border-radius: 10px;
            font-weight: 500;
            margin-bottom: 0.5rem;
            align-items: center;
        }

        .order-row {
            display: grid;
            grid-template-columns: 0.5fr 1fr 1.5fr 1fr 1fr 1fr 1.2fr;
            gap: 1rem;
            padding: 1.2rem 1.5rem;
            background: white;
            border-radius: 10px;
            align-items: center;
            transition: transform 0.2s, box-shadow 0.2s;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            margin-bottom: 12px;
        }

        .order-row:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .order-cell {
            display: flex;
            align-items: center;
        }

        .order-id {
            font-weight: 600;
            color: #2c3e50;
        }

        .order-number {
            color: #6c757d;
            font-size: 0.9rem;
            margin-right: 0.5rem;
        }

        .status-select {
            width: 140px;
            padding: 0.4rem;
        }

        .action-btn {
            padding: 0.3rem 0.8rem;
            margin-right: 0.6rem;
            border-radius: 6px;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .btn-view {
            background: linear-gradient(45deg, #ff9f43, #ffa426);
            border: none;
            color: white;
        }

        .btn-view:hover {
            background: linear-gradient(45deg, #ff8f33, #ff9416);
            color: white;
        }

        .cell-content {
            display: flex;
            flex-direction: column;
        }

        .cell-main {
            font-weight: 500;
            color: #2c3e50;
        }

        .cell-sub {
            font-size: 0.85rem;
            color: #6c757d;
            margin-top: 0.2rem;
        }

        /* Header styles */
        .admin-profile {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .admin-profile img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
    </style>

    <main class="main-content">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0">Order Management</h1>
                
            </div>

            <div class="orders-grid">
                <div class="order-header">
                    <div>No.</div>
                    <div>Order ID</div>
                    <div>User</div>
                    <div>Order Date</div>
                    <div>Status</div>
                    <div>Total Amount</div>
                    <div>Actions</div>
                </div>
                <div id="orders-container">
                    <!-- Orders will be dynamically loaded here -->
                </div>
            </div>
        </div>
    </main>

    <!-- Order Details Modal -->
    <div class="modal fade order-details-modal" id="orderDetailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="orderDetailsContent">
                    <!-- Order details will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Sample order data with enhanced details
        const orders = {
            'john.doe@example.com': [
                {
                    id: 'ORD8756445',
                    products: [
                        {
                            name: 'Premium Headphones',
                            image: 'https://via.placeholder.com/100',
                            quantity: 2,
                            price: 99.99,
                            discount: 10
                        },
                        {
                            name: 'Wireless Mouse',
                            image: 'https://via.placeholder.com/100',
                            quantity: 1,
                            price: 29.99,
                            discount: 0
                        }
                    ],
                    couponCode: 'SUMMER21',
                    couponDiscount: 15,
                    subtotal: 229.97,
                    totalDiscount: 38,
                    total: 191.97,
                    status: 'pending',
                    date: '2025-02-04'
                }
            ],
            'jane.smith@example.com': [
                {
                    id: 'ORD9856373',
                    products: [
                        {
                            name: 'Gaming Keyboard',
                            image: 'https://via.placeholder.com/100',
                            quantity: 1,
                            price: 149.99,
                            discount: 20
                        }
                    ],
                    couponCode: '',
                    couponDiscount: 0,
                    subtotal: 149.99,
                    totalDiscount: 30,
                    total: 119.99,
                    status: 'shipped',
                    date: '2025-02-03'
                }
            ]
        };

        function getStatusBadgeClass(status) {
            const classes = {
                'pending': 'bg-warning',
                'shipped': 'bg-info',
                'delivered': 'bg-success',
                'cancelled': 'bg-danger'
            };
            return classes[status] || 'bg-secondary';
        }

        function updateOrderStatus(orderId, newStatus) {
            for (const userOrders of Object.values(orders)) {
                const order = userOrders.find(o => o.id === orderId);
                if (order) {
                    order.status = newStatus;
                    break;
                }
            }
            renderOrders();
        }

        function cancelOrder(orderId) {
            if (confirm('Are you sure you want to cancel this order?')) {
                updateOrderStatus(orderId, 'cancelled');
            }
        }

        function viewOrderDetails(orderId) {
            let orderDetails;
            for (const userOrders of Object.values(orders)) {
                orderDetails = userOrders.find(o => o.id === orderId);
                if (orderDetails) break;
            }

            if (!orderDetails) return;

            const content = document.getElementById('orderDetailsContent');
            content.innerHTML = `
                <div class="container-fluid">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <h6>Order #${orderDetails.id}</h6>
                            <p class="text-muted mb-1">Date: ${orderDetails.date}</p>
                            <p class="mb-1">Status: <span class="badge ${getStatusBadgeClass(orderDetails.status)}">${orderDetails.status.toUpperCase()}</span></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <p class="mb-1">Subtotal: $${orderDetails.subtotal.toFixed(2)}</p>
                            ${orderDetails.couponCode ? `<p class="mb-1">Coupon (${orderDetails.couponCode}): -$${orderDetails.couponDiscount.toFixed(2)}</p>` : ''}
                            <p class="mb-1">Total Discount: -$${orderDetails.totalDiscount.toFixed(2)}</p>
                            <h5 class="text-primary">Final Total: $${orderDetails.total.toFixed(2)}</h5>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Image</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th>Discount</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${orderDetails.products.map(product => `
                                    <tr>
                                        <td>${product.name}</td>
                                        <td><img src="${product.image}" class="product-image" alt="${product.name}"></td>
                                        <td>${product.quantity}</td>
                                        <td>$${product.price.toFixed(2)}</td>
                                        <td>${product.discount > 0 ? `<span class="discount-badge">-${product.discount}%</span>` : '-'}</td>
                                        <td>$${(product.quantity * product.price * (1 - product.discount/100)).toFixed(2)}</td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                </div>
            `;

            const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
            modal.show();
        }

        function renderOrders() {
            const container = document.getElementById('orders-container');
            container.innerHTML = '';

            let orderNumber = 1;
            Object.entries(orders).forEach(([user, userOrders]) => {
                userOrders.forEach(order => {
                    const orderElement = document.createElement('div');
                    orderElement.className = 'order-row';
                    orderElement.innerHTML = `
                        <div class="order-cell">
                            <span class="order-number">#${orderNumber}</span>
                        </div>
                        <div class="order-cell">
                            <span class="order-id">${order.id}</span>
                        </div>
                        <div class="order-cell">
                            <div class="cell-content">
                                <span class="cell-main">${user}</span>
                                <span class="cell-sub">Customer</span>
                            </div>
                        </div>
                        <div class="order-cell">
                            <div class="cell-content">
                                <span class="cell-main">${order.date}</span>
                                <span class="cell-sub">Order Date</span>
                            </div>
                        </div>
                        <div class="order-cell">
                            <select class="form-select status-select" 
                                    onchange="updateOrderStatus('${order.id}', this.value)" 
                                    ${order.status === 'cancelled' ? 'disabled' : ''}>
                                <option value="pending" ${order.status === 'pending' ? 'selected' : ''}>Pending</option>
                                <option value="shipped" ${order.status === 'shipped' ? 'selected' : ''}>Shipped</option>
                                <option value="delivered" ${order.status === 'delivered' ? 'selected' : ''}>Delivered</option>
                                <option value="cancelled" ${order.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                            </select>
                        </div>
                        <div class="order-cell">
                            <div class="cell-content">
                                <span class="cell-main">$${order.total.toFixed(2)}</span>
                                <span class="cell-sub">Total Amount</span>
                            </div>
                        </div>
                        <div class="order-cell">
                            <button class="btn btn-view action-btn" onclick="viewOrderDetails('${order.id}')">
                                <i class="fas fa-eye me-1"></i> View
                            </button>
                            ${order.status !== 'cancelled' ? `
                                <button class="btn btn-danger action-btn" onclick="cancelOrder('${order.id}')">
                                    <i class="fas fa-times me-1"></i> Cancel
                                </button>
                            ` : ''}
                        </div>
                    `;
                    container.appendChild(orderElement);
                    orderNumber++;
                });
            });
        }

        // Initial render
        renderOrders();
    </script>


    <%- include("../../views/partials/admin/footer") %>