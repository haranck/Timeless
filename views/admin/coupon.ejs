<%- include("../../views/partials/admin/header") %>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .page-header {
            background-color: #fff;
            padding: 15px 0;
            margin-bottom: 30px;
            border-bottom: 1px solid #e0e0e0;
        }

        .table {
            background-color: white;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .badge {
            padding: 8px 12px;
        }

        .btn-action {
            margin: 0 3px;
        }

        body {
            background-color: #f8f9fa;
        }

        .modal {
            position: fixed;
            z-index: 1050;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            display: none;
            justify-content: center;
            align-items: center;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: #fff;
            padding: 25px;
            border-radius: 12px;
            width: 420px;
            max-width: 90%;
            box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.3);
            animation: fadeIn 0.3s ease-in-out;
            position: relative;
        }

        .modal-title {
            font-size: 22px;
            font-weight: 600;
            color: #333;
            text-align: center;
            margin-bottom: 15px;
        }

        .close-btn {
            position: absolute;
            top: 12px;
            right: 12px;
            font-size: 22px;
            cursor: pointer;
            color: #555;
            transition: 0.3s ease;
        }

        .close-btn:hover {
            color: #d9534f;
        }

        .modal-content form {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .modal-content label {
            font-size: 14px;
            font-weight: 500;
            color: #333;
        }

        .modal-content input,
        .modal-content select {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ddd;
            border-radius: 6px;
            width: 100%;
            transition: 0.3s ease;
        }

        .modal-content input:focus,
        .modal-content select:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0px 0px 5px rgba(0, 123, 255, 0.5);
        }

        .save-btn {
            background-color: #007bff;
            color: #fff;
            font-size: 16px;
            font-weight: 500;
            border: none;
            padding: 12px;
            border-radius: 6px;
            cursor: pointer;
            transition: 0.3s ease;
        }

        .save-btn:hover {
            background-color: #0056b3;
        }

        @keyframes fadeIn {
            from {
                transform: scale(0.95);
                opacity: 0;
            }

            to {
                transform: scale(1);
                opacity: 1;
            }
        }

        .modal.show {
            display: flex;
        }
    </style>

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Manage Coupons</h2>
                    <button class="btn btn-primary" id="addCouponBtn">
                        <i class="fas fa-plus"></i> Add Coupon
                    </button>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="card">
                <div class="card-body">
                    <table class="table table-hover text-center">
                        <thead class="table-dark">
                            <tr>
                                <th>Coupon Code</th>
                                <th>Coupon Type</th>
                                <th>Coupon %</th>
                                <th>Discount</th>
                                <th>Minimum Purchase</th>
                                <th>Maximum Purchase</th>
                                <th>Expiration Date</th>
                                <!-- <th>Status</th> -->
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% coupons.forEach((coupon)=> { %>
                                <tr>
                                    <td>
                                        <%= coupon.couponCode %>
                                    </td>
                                    <td>
                                        <%= coupon.couponType %>
                                    </td>
                                    <td>â‚¹0</td>
                                    <td>
                                        <%= coupon.couponDiscount %>
                                    </td>
                                    <td>
                                        <%= coupon.couponMinAmount %>
                                    </td>
                                    <td>
                                        <%= coupon.couponMaxAmount %>
                                    </td>
                                    <td>
                                        <%= coupon.couponValidity.getDate() %>/<%= coupon.couponValidity.getMonth() %>/
                                                <%= coupon.couponValidity.getFullYear() %>
                                    </td>
                                    <!-- <td>
                                            <span class="badge bg-success">Active</span>
                                    </td> -->
                                    <td>
                                        <div
                                            class="form-check form-switch d-flex align-items-center justify-content-start">
                                            <input type="checkbox" class="form-check-input toggle-status"
                                                data-id="<%= coupon._id %>" <%=coupon.isActive ? 'checked' : '' %>
                                            />
                                            <span
                                                class="status-label ms-2 <%= coupon.isActive ? 'text-success' : 'text-danger' %>">
                                                <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Coupon Modal -->
    <div id="couponModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" id="closeModalBtn">&times;</span>
            <h2 class="modal-title">Add Coupon</h2>
            <form id="couponForm">
                <div class="form-group">
                    <label for="couponCode">Coupon Code</label>
                    <input type="text" name="couponCode" placeholder="Enter Coupon Code" required>

                    <label for="couponType">Coupon Type</label>
                    <select name="couponType" required>
                        <option value="percentage">Percentage</option>
                        <option value="fixed">Fixed Amount</option>
                    </select>

                    <label for="discount">Discount Value</label>
                    <input type="number" name="discount" placeholder="Discount Value" required>

                    <label for="minPurchase">Minimum Purchase Amount</label>
                    <input type="number" name="minPurchase" placeholder="Minimum Purchase Amount" required>

                    <label for="maxPurchase">Maximum Purchase Amount</label>
                    <input type="number" name="maxPurchase" placeholder="Maximum Purchase Amount" required>

                    <label for="expiryDate">Expiration Date</label>
                    <input type="date" name="expiryDate" required>
                </div>
                <button type="submit" class="save-btn">Save Coupon</button>
            </form>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('couponModal');
            const addCouponBtn = document.getElementById('addCouponBtn');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const couponForm = document.getElementById('couponForm');

            function openModal() {
                modal.classList.add('show');
                document.body.style.overflow = 'hidden';
            }

            function closeModal() {
                modal.classList.remove('show');
                document.body.style.overflow = '';
                couponForm.reset();
            }

            addCouponBtn.addEventListener('click', openModal);
            closeModalBtn.addEventListener('click', closeModal);

            window.addEventListener('click', (event) => {
                if (event.target === modal) {
                    closeModal();
                }
            });

            // Handle form submission
            couponForm.addEventListener('submit', async function (event) {
                event.preventDefault();


                const couponCode = document.querySelector("input[name='couponCode']").value
                const couponType = document.querySelector("select[name='couponType']").value
                const discount = document.querySelector("input[name='discount']").value
                const minPurchase = document.querySelector("input[name='minPurchase']").value
                const maxPurchase = document.querySelector("input[name='maxPurchase']").value
                const expiryDate = document.querySelector("input[name='expiryDate']").value
                const isActive = document.querySelector("input[name='isActive']").checked

                try {
                    const response = await fetch("/admin/addCoupon", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            couponCode,
                            couponType,
                            discount,
                            minPurchase,
                            expiryDate,
                            maxPurchase,
                            isActive
                        })
                    });

                    // // Log the full response for debugging
                    // console.log('Response status:', response.status);
                    // console.log('Response headers:', Object.fromEntries(response.headers.entries()));

                    const data = await response.json();
                    console.log('Response data:', data);

                    if (response.ok) {
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'Your coupon has been added.',
                                icon: 'success',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            window.location.reload();
                            closeModal();
                            couponForm.reset();
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message || "Failed to add coupon",
                                icon: 'error',
                                showConfirmButton: false,
                                timer: 1500
                            })
                        }
                    } else {
                        // Handle HTTP errors
                        const errorMessage = data.message || `Error: ${response.status} ${response.statusText}`;
                        console.error('Coupon submission error:', errorMessage);
                        Swal.fire({
                            title: 'Error!',
                            text: errorMessage,
                            icon: 'error',
                            showConfirmButton: false,
                            timer: 150
                        })
                    }
                } catch (error) {
                    // Catch network errors or JSON parsing errors
                    console.error("Detailed error in add coupon:", error);
                    Swal.fire({
                        title: 'Error!',
                        text: `Network error: ${error.message}. Please check your connection and try again.`,
                        icon: 'error',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            });


        });



        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.toggle-status').forEach(toggle => {
                toggle.addEventListener('change', function () {
                    const couponId = this.getAttribute('data-id');
                    const statusLabel = this.nextElementSibling;
                    const isActive = this.checked;

                    Swal.fire({
                        title: 'Confirm Status Change',
                        text: `Are you sure you want to ${isActive ? 'Activate' : 'Inactivate'} this coupon?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, change it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                        
                            fetch(`/admin/toggle-coupon/${couponId}`, {
                                method: 'PATCH',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ isActive })
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        
                                        if (data.isActive) {
                                            statusLabel.textContent = 'Active';
                                            statusLabel.classList.remove('text-danger');
                                            statusLabel.classList.add('text-success');
                                        } else {
                                            statusLabel.textContent = 'Inactive';
                                            statusLabel.classList.remove('text-success');
                                            statusLabel.classList.add('text-danger');
                                        }

                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Coupon Status Updated',
                                            text: data.message,
                                            toast: true,
                                            position: 'top-end',
                                            showConfirmButton: false,
                                            timer: 2000
                                        });
                                    } else {
                                        this.checked = !isActive;

                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: data.message || 'Failed to update coupon status'
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);

                                    // Revert toggle
                                    this.checked = !isActive;

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Network Error',
                                        text: 'Unable to update coupon status'
                                    });
                                });
                        } else {
                            // Revert toggle if user cancels
                            this.checked = !isActive;
                        }
                    });
                });
            });
        });


    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <%- include("../../views/partials/admin/footer") %>